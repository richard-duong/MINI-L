Grammar

    0 $accept: prog $end

    1 prog: func_cycle

    2 func_cycle: %empty
    3           | func_cycle FUNCTION IDEN SEMICOLON BEGINPARAMS decl_cycle ENDPARAMS BEGINLOCALS decl_cycle ENDLOCALS BEGINBODY stmt_cycle ENDBODY

    4 decl_cycle: %empty
    5           | decl_cycle decl SEMICOLON

    6 decl: iden_cycle COLON arr_cycle INTEGER

    7 iden_cycle: IDEN
    8           | iden_cycle COMMA IDEN

    9 stmt_cycle: stmt SEMICOLON
   10           | stmt_cycle stmt SEMICOLON

   11 arr_cycle: %empty
   12          | ARRAY L_BRACK NUM R_BRACK OF
   13          | ARRAY L_BRACK NUM R_BRACK L_BRACK NUM R_BRACK OF

   14 stmt: assign_cycle
   15     | if_cycle
   16     | while_cycle
   17     | do_cycle
   18     | for_cycle
   19     | read_cycle
   20     | write_cycle
   21     | continue_cycle
   22     | return_cycle

   23 assign_cycle: var ASSIGN exp

   24 if_cycle: IF bool_exp THEN stmt_cycle else_cycle ENDIF

   25 else_cycle: %empty
   26           | ELSE stmt_cycle

   27 while_cycle: WHILE bool_exp BEGINLOOP stmt_cycle ENDLOOP

   28 do_cycle: DO BEGINLOOP stmt_cycle ENDLOOP WHILE bool_exp

   29 for_cycle: FOR var ASSIGN NUM SEMICOLON bool_exp SEMICOLON var ASSIGN exp BEGINLOOP stmt_cycle ENDLOOP

   30 read_cycle: READ var_cycle

   31 write_cycle: WRITE var_cycle

   32 continue_cycle: CONTINUE

   33 return_cycle: RETURN exp

   34 var_cycle: var
   35          | var_cycle COMMA var

   36 bool_exp: rel_and_exp
   37         | bool_exp OR rel_and_exp

   38 rel_and_exp: rel_exp
   39            | rel_and_exp AND rel_exp

   40 rel_exp: rel_exp_base
   41        | NOT rel_exp_base

   42 rel_exp_base: exp comp exp
   43             | TRUE
   44             | FALSE
   45             | L_PAREN bool_exp R_PAREN

   46 comp: EQ
   47     | NEQ
   48     | LT
   49     | GT
   50     | LTE
   51     | GTE

   52 exp: mult_exp mult_cycle

   53 mult_cycle: %empty
   54           | ADD mult_exp mult_cycle
   55           | SUB mult_exp mult_cycle

   56 mult_exp: term term_cycle

   57 term_cycle: %empty
   58           | MULT term term_cycle
   59           | DIV term term_cycle
   60           | MOD term term_cycle

   61 term: term_base
   62     | SUB term_base
   63     | IDEN L_PAREN param_cycle R_PAREN

   64 term_base: var
   65          | NUM
   66          | L_PAREN exp R_PAREN

   67 param_cycle: %empty
   68            | exp_cycle

   69 exp_cycle: exp
   70          | exp_cycle COMMA exp

   71 var: IDEN
   72    | IDEN L_BRACK exp R_BRACK
   73    | IDEN L_BRACK exp R_BRACK L_BRACK exp R_BRACK


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 3
BEGINPARAMS (259) 3
ENDPARAMS (260) 3
BEGINLOCALS (261) 3
ENDLOCALS (262) 3
BEGINBODY (263) 3
ENDBODY (264) 3
INTEGER (265) 6
ARRAY (266) 12 13
OF (267) 12 13
IF (268) 24
THEN (269) 24
ENDIF (270) 24
ELSE (271) 26
WHILE (272) 27 28
DO (273) 28
FOR (274) 29
BEGINLOOP (275) 27 28 29
ENDLOOP (276) 27 28 29
CONTINUE (277) 32
READ (278) 30
WRITE (279) 31
AND (280) 39
OR (281) 37
NOT (282) 41
TRUE (283) 43
FALSE (284) 44
RETURN (285) 33
SEMICOLON (286) 3 5 9 10 29
L_PAREN (287) 45 63 66
R_PAREN (288) 45 63 66
L_BRACK (289) 12 13 72 73
R_BRACK (290) 12 13 72 73
COLON (291) 6
COMMA (292) 8 35 70
ASSIGN (293) 23 29
NUM (294) 12 13 29 65
IDEN (295) 3 7 8 63 71 72 73
MULT (296) 58
DIV (297) 59
MOD (298) 60
ADD (299) 54
SUB (300) 55 62
LT (301) 48
LTE (302) 50
GT (303) 49
GTE (304) 51
EQ (305) 46
NEQ (306) 47


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog (53)
    on left: 1, on right: 0
func_cycle (54)
    on left: 2 3, on right: 1 3
decl_cycle (55)
    on left: 4 5, on right: 3 5
decl (56)
    on left: 6, on right: 5
iden_cycle (57)
    on left: 7 8, on right: 6 8
stmt_cycle (58)
    on left: 9 10, on right: 3 10 24 26 27 28 29
arr_cycle (59)
    on left: 11 12 13, on right: 6
stmt (60)
    on left: 14 15 16 17 18 19 20 21 22, on right: 9 10
assign_cycle (61)
    on left: 23, on right: 14
if_cycle (62)
    on left: 24, on right: 15
else_cycle (63)
    on left: 25 26, on right: 24
while_cycle (64)
    on left: 27, on right: 16
do_cycle (65)
    on left: 28, on right: 17
for_cycle (66)
    on left: 29, on right: 18
read_cycle (67)
    on left: 30, on right: 19
write_cycle (68)
    on left: 31, on right: 20
continue_cycle (69)
    on left: 32, on right: 21
return_cycle (70)
    on left: 33, on right: 22
var_cycle (71)
    on left: 34 35, on right: 30 31 35
bool_exp (72)
    on left: 36 37, on right: 24 27 28 29 37 45
rel_and_exp (73)
    on left: 38 39, on right: 36 37 39
rel_exp (74)
    on left: 40 41, on right: 38 39
rel_exp_base (75)
    on left: 42 43 44 45, on right: 40 41
comp (76)
    on left: 46 47 48 49 50 51, on right: 42
exp (77)
    on left: 52, on right: 23 29 33 42 66 69 70 72 73
mult_cycle (78)
    on left: 53 54 55, on right: 52 54 55
mult_exp (79)
    on left: 56, on right: 52 54 55
term_cycle (80)
    on left: 57 58 59 60, on right: 56 58 59 60
term (81)
    on left: 61 62 63, on right: 56 58 59 60
term_base (82)
    on left: 64 65 66, on right: 61 62
param_cycle (83)
    on left: 67 68, on right: 63
exp_cycle (84)
    on left: 69 70, on right: 68 70
var (85)
    on left: 71 72 73, on right: 23 29 34 35 64


State 0

    0 $accept: . prog $end

    $default  reduce using rule 2 (func_cycle)

    prog        go to state 1
    func_cycle  go to state 2


State 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


State 2

    1 prog: func_cycle .
    3 func_cycle: func_cycle . FUNCTION IDEN SEMICOLON BEGINPARAMS decl_cycle ENDPARAMS BEGINLOCALS decl_cycle ENDLOCALS BEGINBODY stmt_cycle ENDBODY

    FUNCTION  shift, and go to state 4

    $default  reduce using rule 1 (prog)


State 3

    0 $accept: prog $end .

    $default  accept


State 4

    3 func_cycle: func_cycle FUNCTION . IDEN SEMICOLON BEGINPARAMS decl_cycle ENDPARAMS BEGINLOCALS decl_cycle ENDLOCALS BEGINBODY stmt_cycle ENDBODY

    IDEN  shift, and go to state 5


State 5

    3 func_cycle: func_cycle FUNCTION IDEN . SEMICOLON BEGINPARAMS decl_cycle ENDPARAMS BEGINLOCALS decl_cycle ENDLOCALS BEGINBODY stmt_cycle ENDBODY

    SEMICOLON  shift, and go to state 6


State 6

    3 func_cycle: func_cycle FUNCTION IDEN SEMICOLON . BEGINPARAMS decl_cycle ENDPARAMS BEGINLOCALS decl_cycle ENDLOCALS BEGINBODY stmt_cycle ENDBODY

    BEGINPARAMS  shift, and go to state 7


State 7

    3 func_cycle: func_cycle FUNCTION IDEN SEMICOLON BEGINPARAMS . decl_cycle ENDPARAMS BEGINLOCALS decl_cycle ENDLOCALS BEGINBODY stmt_cycle ENDBODY

    $default  reduce using rule 4 (decl_cycle)

    decl_cycle  go to state 8


State 8

    3 func_cycle: func_cycle FUNCTION IDEN SEMICOLON BEGINPARAMS decl_cycle . ENDPARAMS BEGINLOCALS decl_cycle ENDLOCALS BEGINBODY stmt_cycle ENDBODY
    5 decl_cycle: decl_cycle . decl SEMICOLON

    ENDPARAMS  shift, and go to state 9
    IDEN       shift, and go to state 10

    decl        go to state 11
    iden_cycle  go to state 12


State 9

    3 func_cycle: func_cycle FUNCTION IDEN SEMICOLON BEGINPARAMS decl_cycle ENDPARAMS . BEGINLOCALS decl_cycle ENDLOCALS BEGINBODY stmt_cycle ENDBODY

    BEGINLOCALS  shift, and go to state 13


State 10

    7 iden_cycle: IDEN .

    $default  reduce using rule 7 (iden_cycle)


State 11

    5 decl_cycle: decl_cycle decl . SEMICOLON

    SEMICOLON  shift, and go to state 14


State 12

    6 decl: iden_cycle . COLON arr_cycle INTEGER
    8 iden_cycle: iden_cycle . COMMA IDEN

    COLON  shift, and go to state 15
    COMMA  shift, and go to state 16


State 13

    3 func_cycle: func_cycle FUNCTION IDEN SEMICOLON BEGINPARAMS decl_cycle ENDPARAMS BEGINLOCALS . decl_cycle ENDLOCALS BEGINBODY stmt_cycle ENDBODY

    $default  reduce using rule 4 (decl_cycle)

    decl_cycle  go to state 17


State 14

    5 decl_cycle: decl_cycle decl SEMICOLON .

    $default  reduce using rule 5 (decl_cycle)


State 15

    6 decl: iden_cycle COLON . arr_cycle INTEGER

    ARRAY  shift, and go to state 18

    $default  reduce using rule 11 (arr_cycle)

    arr_cycle  go to state 19


State 16

    8 iden_cycle: iden_cycle COMMA . IDEN

    IDEN  shift, and go to state 20


State 17

    3 func_cycle: func_cycle FUNCTION IDEN SEMICOLON BEGINPARAMS decl_cycle ENDPARAMS BEGINLOCALS decl_cycle . ENDLOCALS BEGINBODY stmt_cycle ENDBODY
    5 decl_cycle: decl_cycle . decl SEMICOLON

    ENDLOCALS  shift, and go to state 21
    IDEN       shift, and go to state 10

    decl        go to state 11
    iden_cycle  go to state 12


State 18

   12 arr_cycle: ARRAY . L_BRACK NUM R_BRACK OF
   13          | ARRAY . L_BRACK NUM R_BRACK L_BRACK NUM R_BRACK OF

    L_BRACK  shift, and go to state 22


State 19

    6 decl: iden_cycle COLON arr_cycle . INTEGER

    INTEGER  shift, and go to state 23


State 20

    8 iden_cycle: iden_cycle COMMA IDEN .

    $default  reduce using rule 8 (iden_cycle)


State 21

    3 func_cycle: func_cycle FUNCTION IDEN SEMICOLON BEGINPARAMS decl_cycle ENDPARAMS BEGINLOCALS decl_cycle ENDLOCALS . BEGINBODY stmt_cycle ENDBODY

    BEGINBODY  shift, and go to state 24


State 22

   12 arr_cycle: ARRAY L_BRACK . NUM R_BRACK OF
   13          | ARRAY L_BRACK . NUM R_BRACK L_BRACK NUM R_BRACK OF

    NUM  shift, and go to state 25


State 23

    6 decl: iden_cycle COLON arr_cycle INTEGER .

    $default  reduce using rule 6 (decl)


State 24

    3 func_cycle: func_cycle FUNCTION IDEN SEMICOLON BEGINPARAMS decl_cycle ENDPARAMS BEGINLOCALS decl_cycle ENDLOCALS BEGINBODY . stmt_cycle ENDBODY

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    DO        shift, and go to state 28
    FOR       shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDEN      shift, and go to state 34

    stmt_cycle      go to state 35
    stmt            go to state 36
    assign_cycle    go to state 37
    if_cycle        go to state 38
    while_cycle     go to state 39
    do_cycle        go to state 40
    for_cycle       go to state 41
    read_cycle      go to state 42
    write_cycle     go to state 43
    continue_cycle  go to state 44
    return_cycle    go to state 45
    var             go to state 46


State 25

   12 arr_cycle: ARRAY L_BRACK NUM . R_BRACK OF
   13          | ARRAY L_BRACK NUM . R_BRACK L_BRACK NUM R_BRACK OF

    R_BRACK  shift, and go to state 47


State 26

   24 if_cycle: IF . bool_exp THEN stmt_cycle else_cycle ENDIF

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    bool_exp      go to state 55
    rel_and_exp   go to state 56
    rel_exp       go to state 57
    rel_exp_base  go to state 58
    exp           go to state 59
    mult_exp      go to state 60
    term          go to state 61
    term_base     go to state 62
    var           go to state 63


State 27

   27 while_cycle: WHILE . bool_exp BEGINLOOP stmt_cycle ENDLOOP

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    bool_exp      go to state 64
    rel_and_exp   go to state 56
    rel_exp       go to state 57
    rel_exp_base  go to state 58
    exp           go to state 59
    mult_exp      go to state 60
    term          go to state 61
    term_base     go to state 62
    var           go to state 63


State 28

   28 do_cycle: DO . BEGINLOOP stmt_cycle ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 65


State 29

   29 for_cycle: FOR . var ASSIGN NUM SEMICOLON bool_exp SEMICOLON var ASSIGN exp BEGINLOOP stmt_cycle ENDLOOP

    IDEN  shift, and go to state 34

    var  go to state 66


State 30

   32 continue_cycle: CONTINUE .

    $default  reduce using rule 32 (continue_cycle)


State 31

   30 read_cycle: READ . var_cycle

    IDEN  shift, and go to state 34

    var_cycle  go to state 67
    var        go to state 68


State 32

   31 write_cycle: WRITE . var_cycle

    IDEN  shift, and go to state 34

    var_cycle  go to state 69
    var        go to state 68


State 33

   33 return_cycle: RETURN . exp

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    exp        go to state 71
    mult_exp   go to state 60
    term       go to state 61
    term_base  go to state 62
    var        go to state 63


State 34

   71 var: IDEN .
   72    | IDEN . L_BRACK exp R_BRACK
   73    | IDEN . L_BRACK exp R_BRACK L_BRACK exp R_BRACK

    L_BRACK  shift, and go to state 72

    $default  reduce using rule 71 (var)


State 35

    3 func_cycle: func_cycle FUNCTION IDEN SEMICOLON BEGINPARAMS decl_cycle ENDPARAMS BEGINLOCALS decl_cycle ENDLOCALS BEGINBODY stmt_cycle . ENDBODY
   10 stmt_cycle: stmt_cycle . stmt SEMICOLON

    ENDBODY   shift, and go to state 73
    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    DO        shift, and go to state 28
    FOR       shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDEN      shift, and go to state 34

    stmt            go to state 74
    assign_cycle    go to state 37
    if_cycle        go to state 38
    while_cycle     go to state 39
    do_cycle        go to state 40
    for_cycle       go to state 41
    read_cycle      go to state 42
    write_cycle     go to state 43
    continue_cycle  go to state 44
    return_cycle    go to state 45
    var             go to state 46


State 36

    9 stmt_cycle: stmt . SEMICOLON

    SEMICOLON  shift, and go to state 75


State 37

   14 stmt: assign_cycle .

    $default  reduce using rule 14 (stmt)


State 38

   15 stmt: if_cycle .

    $default  reduce using rule 15 (stmt)


State 39

   16 stmt: while_cycle .

    $default  reduce using rule 16 (stmt)


State 40

   17 stmt: do_cycle .

    $default  reduce using rule 17 (stmt)


State 41

   18 stmt: for_cycle .

    $default  reduce using rule 18 (stmt)


State 42

   19 stmt: read_cycle .

    $default  reduce using rule 19 (stmt)


State 43

   20 stmt: write_cycle .

    $default  reduce using rule 20 (stmt)


State 44

   21 stmt: continue_cycle .

    $default  reduce using rule 21 (stmt)


State 45

   22 stmt: return_cycle .

    $default  reduce using rule 22 (stmt)


State 46

   23 assign_cycle: var . ASSIGN exp

    ASSIGN  shift, and go to state 76


State 47

   12 arr_cycle: ARRAY L_BRACK NUM R_BRACK . OF
   13          | ARRAY L_BRACK NUM R_BRACK . L_BRACK NUM R_BRACK OF

    OF       shift, and go to state 77
    L_BRACK  shift, and go to state 78


State 48

   41 rel_exp: NOT . rel_exp_base

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    rel_exp_base  go to state 79
    exp           go to state 59
    mult_exp      go to state 60
    term          go to state 61
    term_base     go to state 62
    var           go to state 63


State 49

   43 rel_exp_base: TRUE .

    $default  reduce using rule 43 (rel_exp_base)


State 50

   44 rel_exp_base: FALSE .

    $default  reduce using rule 44 (rel_exp_base)


State 51

   45 rel_exp_base: L_PAREN . bool_exp R_PAREN
   66 term_base: L_PAREN . exp R_PAREN

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    bool_exp      go to state 80
    rel_and_exp   go to state 56
    rel_exp       go to state 57
    rel_exp_base  go to state 58
    exp           go to state 81
    mult_exp      go to state 60
    term          go to state 61
    term_base     go to state 62
    var           go to state 63


State 52

   65 term_base: NUM .

    $default  reduce using rule 65 (term_base)


State 53

   63 term: IDEN . L_PAREN param_cycle R_PAREN
   71 var: IDEN .
   72    | IDEN . L_BRACK exp R_BRACK
   73    | IDEN . L_BRACK exp R_BRACK L_BRACK exp R_BRACK

    L_PAREN  shift, and go to state 82
    L_BRACK  shift, and go to state 72

    $default  reduce using rule 71 (var)


State 54

   62 term: SUB . term_base

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 34

    term_base  go to state 83
    var        go to state 63


State 55

   24 if_cycle: IF bool_exp . THEN stmt_cycle else_cycle ENDIF
   37 bool_exp: bool_exp . OR rel_and_exp

    THEN  shift, and go to state 84
    OR    shift, and go to state 85


State 56

   36 bool_exp: rel_and_exp .
   39 rel_and_exp: rel_and_exp . AND rel_exp

    AND  shift, and go to state 86

    $default  reduce using rule 36 (bool_exp)


State 57

   38 rel_and_exp: rel_exp .

    $default  reduce using rule 38 (rel_and_exp)


State 58

   40 rel_exp: rel_exp_base .

    $default  reduce using rule 40 (rel_exp)


State 59

   42 rel_exp_base: exp . comp exp

    LT   shift, and go to state 87
    LTE  shift, and go to state 88
    GT   shift, and go to state 89
    GTE  shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92

    comp  go to state 93


State 60

   52 exp: mult_exp . mult_cycle

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95

    $default  reduce using rule 53 (mult_cycle)

    mult_cycle  go to state 96


State 61

   56 mult_exp: term . term_cycle

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 57 (term_cycle)

    term_cycle  go to state 100


State 62

   61 term: term_base .

    $default  reduce using rule 61 (term)


State 63

   64 term_base: var .

    $default  reduce using rule 64 (term_base)


State 64

   27 while_cycle: WHILE bool_exp . BEGINLOOP stmt_cycle ENDLOOP
   37 bool_exp: bool_exp . OR rel_and_exp

    BEGINLOOP  shift, and go to state 101
    OR         shift, and go to state 85


State 65

   28 do_cycle: DO BEGINLOOP . stmt_cycle ENDLOOP WHILE bool_exp

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    DO        shift, and go to state 28
    FOR       shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDEN      shift, and go to state 34

    stmt_cycle      go to state 102
    stmt            go to state 36
    assign_cycle    go to state 37
    if_cycle        go to state 38
    while_cycle     go to state 39
    do_cycle        go to state 40
    for_cycle       go to state 41
    read_cycle      go to state 42
    write_cycle     go to state 43
    continue_cycle  go to state 44
    return_cycle    go to state 45
    var             go to state 46


State 66

   29 for_cycle: FOR var . ASSIGN NUM SEMICOLON bool_exp SEMICOLON var ASSIGN exp BEGINLOOP stmt_cycle ENDLOOP

    ASSIGN  shift, and go to state 103


State 67

   30 read_cycle: READ var_cycle .
   35 var_cycle: var_cycle . COMMA var

    COMMA  shift, and go to state 104

    $default  reduce using rule 30 (read_cycle)


State 68

   34 var_cycle: var .

    $default  reduce using rule 34 (var_cycle)


State 69

   31 write_cycle: WRITE var_cycle .
   35 var_cycle: var_cycle . COMMA var

    COMMA  shift, and go to state 104

    $default  reduce using rule 31 (write_cycle)


State 70

   66 term_base: L_PAREN . exp R_PAREN

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    exp        go to state 105
    mult_exp   go to state 60
    term       go to state 61
    term_base  go to state 62
    var        go to state 63


State 71

   33 return_cycle: RETURN exp .

    $default  reduce using rule 33 (return_cycle)


State 72

   72 var: IDEN L_BRACK . exp R_BRACK
   73    | IDEN L_BRACK . exp R_BRACK L_BRACK exp R_BRACK

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    exp        go to state 106
    mult_exp   go to state 60
    term       go to state 61
    term_base  go to state 62
    var        go to state 63


State 73

    3 func_cycle: func_cycle FUNCTION IDEN SEMICOLON BEGINPARAMS decl_cycle ENDPARAMS BEGINLOCALS decl_cycle ENDLOCALS BEGINBODY stmt_cycle ENDBODY .

    $default  reduce using rule 3 (func_cycle)


State 74

   10 stmt_cycle: stmt_cycle stmt . SEMICOLON

    SEMICOLON  shift, and go to state 107


State 75

    9 stmt_cycle: stmt SEMICOLON .

    $default  reduce using rule 9 (stmt_cycle)


State 76

   23 assign_cycle: var ASSIGN . exp

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    exp        go to state 108
    mult_exp   go to state 60
    term       go to state 61
    term_base  go to state 62
    var        go to state 63


State 77

   12 arr_cycle: ARRAY L_BRACK NUM R_BRACK OF .

    $default  reduce using rule 12 (arr_cycle)


State 78

   13 arr_cycle: ARRAY L_BRACK NUM R_BRACK L_BRACK . NUM R_BRACK OF

    NUM  shift, and go to state 109


State 79

   41 rel_exp: NOT rel_exp_base .

    $default  reduce using rule 41 (rel_exp)


State 80

   37 bool_exp: bool_exp . OR rel_and_exp
   45 rel_exp_base: L_PAREN bool_exp . R_PAREN

    OR       shift, and go to state 85
    R_PAREN  shift, and go to state 110


State 81

   42 rel_exp_base: exp . comp exp
   66 term_base: L_PAREN exp . R_PAREN

    R_PAREN  shift, and go to state 111
    LT       shift, and go to state 87
    LTE      shift, and go to state 88
    GT       shift, and go to state 89
    GTE      shift, and go to state 90
    EQ       shift, and go to state 91
    NEQ      shift, and go to state 92

    comp  go to state 93


State 82

   63 term: IDEN L_PAREN . param_cycle R_PAREN

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    $default  reduce using rule 67 (param_cycle)

    exp          go to state 112
    mult_exp     go to state 60
    term         go to state 61
    term_base    go to state 62
    param_cycle  go to state 113
    exp_cycle    go to state 114
    var          go to state 63


State 83

   62 term: SUB term_base .

    $default  reduce using rule 62 (term)


State 84

   24 if_cycle: IF bool_exp THEN . stmt_cycle else_cycle ENDIF

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    DO        shift, and go to state 28
    FOR       shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDEN      shift, and go to state 34

    stmt_cycle      go to state 115
    stmt            go to state 36
    assign_cycle    go to state 37
    if_cycle        go to state 38
    while_cycle     go to state 39
    do_cycle        go to state 40
    for_cycle       go to state 41
    read_cycle      go to state 42
    write_cycle     go to state 43
    continue_cycle  go to state 44
    return_cycle    go to state 45
    var             go to state 46


State 85

   37 bool_exp: bool_exp OR . rel_and_exp

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    rel_and_exp   go to state 116
    rel_exp       go to state 57
    rel_exp_base  go to state 58
    exp           go to state 59
    mult_exp      go to state 60
    term          go to state 61
    term_base     go to state 62
    var           go to state 63


State 86

   39 rel_and_exp: rel_and_exp AND . rel_exp

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    rel_exp       go to state 117
    rel_exp_base  go to state 58
    exp           go to state 59
    mult_exp      go to state 60
    term          go to state 61
    term_base     go to state 62
    var           go to state 63


State 87

   48 comp: LT .

    $default  reduce using rule 48 (comp)


State 88

   50 comp: LTE .

    $default  reduce using rule 50 (comp)


State 89

   49 comp: GT .

    $default  reduce using rule 49 (comp)


State 90

   51 comp: GTE .

    $default  reduce using rule 51 (comp)


State 91

   46 comp: EQ .

    $default  reduce using rule 46 (comp)


State 92

   47 comp: NEQ .

    $default  reduce using rule 47 (comp)


State 93

   42 rel_exp_base: exp comp . exp

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    exp        go to state 118
    mult_exp   go to state 60
    term       go to state 61
    term_base  go to state 62
    var        go to state 63


State 94

   54 mult_cycle: ADD . mult_exp mult_cycle

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    mult_exp   go to state 119
    term       go to state 61
    term_base  go to state 62
    var        go to state 63


State 95

   55 mult_cycle: SUB . mult_exp mult_cycle

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    mult_exp   go to state 120
    term       go to state 61
    term_base  go to state 62
    var        go to state 63


State 96

   52 exp: mult_exp mult_cycle .

    $default  reduce using rule 52 (exp)


State 97

   58 term_cycle: MULT . term term_cycle

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    term       go to state 121
    term_base  go to state 62
    var        go to state 63


State 98

   59 term_cycle: DIV . term term_cycle

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    term       go to state 122
    term_base  go to state 62
    var        go to state 63


State 99

   60 term_cycle: MOD . term term_cycle

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    term       go to state 123
    term_base  go to state 62
    var        go to state 63


State 100

   56 mult_exp: term term_cycle .

    $default  reduce using rule 56 (mult_exp)


State 101

   27 while_cycle: WHILE bool_exp BEGINLOOP . stmt_cycle ENDLOOP

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    DO        shift, and go to state 28
    FOR       shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDEN      shift, and go to state 34

    stmt_cycle      go to state 124
    stmt            go to state 36
    assign_cycle    go to state 37
    if_cycle        go to state 38
    while_cycle     go to state 39
    do_cycle        go to state 40
    for_cycle       go to state 41
    read_cycle      go to state 42
    write_cycle     go to state 43
    continue_cycle  go to state 44
    return_cycle    go to state 45
    var             go to state 46


State 102

   10 stmt_cycle: stmt_cycle . stmt SEMICOLON
   28 do_cycle: DO BEGINLOOP stmt_cycle . ENDLOOP WHILE bool_exp

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    DO        shift, and go to state 28
    FOR       shift, and go to state 29
    ENDLOOP   shift, and go to state 125
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDEN      shift, and go to state 34

    stmt            go to state 74
    assign_cycle    go to state 37
    if_cycle        go to state 38
    while_cycle     go to state 39
    do_cycle        go to state 40
    for_cycle       go to state 41
    read_cycle      go to state 42
    write_cycle     go to state 43
    continue_cycle  go to state 44
    return_cycle    go to state 45
    var             go to state 46


State 103

   29 for_cycle: FOR var ASSIGN . NUM SEMICOLON bool_exp SEMICOLON var ASSIGN exp BEGINLOOP stmt_cycle ENDLOOP

    NUM  shift, and go to state 126


State 104

   35 var_cycle: var_cycle COMMA . var

    IDEN  shift, and go to state 34

    var  go to state 127


State 105

   66 term_base: L_PAREN exp . R_PAREN

    R_PAREN  shift, and go to state 111


State 106

   72 var: IDEN L_BRACK exp . R_BRACK
   73    | IDEN L_BRACK exp . R_BRACK L_BRACK exp R_BRACK

    R_BRACK  shift, and go to state 128


State 107

   10 stmt_cycle: stmt_cycle stmt SEMICOLON .

    $default  reduce using rule 10 (stmt_cycle)


State 108

   23 assign_cycle: var ASSIGN exp .

    $default  reduce using rule 23 (assign_cycle)


State 109

   13 arr_cycle: ARRAY L_BRACK NUM R_BRACK L_BRACK NUM . R_BRACK OF

    R_BRACK  shift, and go to state 129


State 110

   45 rel_exp_base: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 45 (rel_exp_base)


State 111

   66 term_base: L_PAREN exp R_PAREN .

    $default  reduce using rule 66 (term_base)


State 112

   69 exp_cycle: exp .

    $default  reduce using rule 69 (exp_cycle)


State 113

   63 term: IDEN L_PAREN param_cycle . R_PAREN

    R_PAREN  shift, and go to state 130


State 114

   68 param_cycle: exp_cycle .
   70 exp_cycle: exp_cycle . COMMA exp

    COMMA  shift, and go to state 131

    $default  reduce using rule 68 (param_cycle)


State 115

   10 stmt_cycle: stmt_cycle . stmt SEMICOLON
   24 if_cycle: IF bool_exp THEN stmt_cycle . else_cycle ENDIF

    IF        shift, and go to state 26
    ELSE      shift, and go to state 132
    WHILE     shift, and go to state 27
    DO        shift, and go to state 28
    FOR       shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDEN      shift, and go to state 34

    $default  reduce using rule 25 (else_cycle)

    stmt            go to state 74
    assign_cycle    go to state 37
    if_cycle        go to state 38
    else_cycle      go to state 133
    while_cycle     go to state 39
    do_cycle        go to state 40
    for_cycle       go to state 41
    read_cycle      go to state 42
    write_cycle     go to state 43
    continue_cycle  go to state 44
    return_cycle    go to state 45
    var             go to state 46


State 116

   37 bool_exp: bool_exp OR rel_and_exp .
   39 rel_and_exp: rel_and_exp . AND rel_exp

    AND  shift, and go to state 86

    $default  reduce using rule 37 (bool_exp)


State 117

   39 rel_and_exp: rel_and_exp AND rel_exp .

    $default  reduce using rule 39 (rel_and_exp)


State 118

   42 rel_exp_base: exp comp exp .

    $default  reduce using rule 42 (rel_exp_base)


State 119

   54 mult_cycle: ADD mult_exp . mult_cycle

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95

    $default  reduce using rule 53 (mult_cycle)

    mult_cycle  go to state 134


State 120

   55 mult_cycle: SUB mult_exp . mult_cycle

    ADD  shift, and go to state 94
    SUB  shift, and go to state 95

    $default  reduce using rule 53 (mult_cycle)

    mult_cycle  go to state 135


State 121

   58 term_cycle: MULT term . term_cycle

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 57 (term_cycle)

    term_cycle  go to state 136


State 122

   59 term_cycle: DIV term . term_cycle

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 57 (term_cycle)

    term_cycle  go to state 137


State 123

   60 term_cycle: MOD term . term_cycle

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 57 (term_cycle)

    term_cycle  go to state 138


State 124

   10 stmt_cycle: stmt_cycle . stmt SEMICOLON
   27 while_cycle: WHILE bool_exp BEGINLOOP stmt_cycle . ENDLOOP

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    DO        shift, and go to state 28
    FOR       shift, and go to state 29
    ENDLOOP   shift, and go to state 139
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDEN      shift, and go to state 34

    stmt            go to state 74
    assign_cycle    go to state 37
    if_cycle        go to state 38
    while_cycle     go to state 39
    do_cycle        go to state 40
    for_cycle       go to state 41
    read_cycle      go to state 42
    write_cycle     go to state 43
    continue_cycle  go to state 44
    return_cycle    go to state 45
    var             go to state 46


State 125

   28 do_cycle: DO BEGINLOOP stmt_cycle ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 140


State 126

   29 for_cycle: FOR var ASSIGN NUM . SEMICOLON bool_exp SEMICOLON var ASSIGN exp BEGINLOOP stmt_cycle ENDLOOP

    SEMICOLON  shift, and go to state 141


State 127

   35 var_cycle: var_cycle COMMA var .

    $default  reduce using rule 35 (var_cycle)


State 128

   72 var: IDEN L_BRACK exp R_BRACK .
   73    | IDEN L_BRACK exp R_BRACK . L_BRACK exp R_BRACK

    L_BRACK  shift, and go to state 142

    $default  reduce using rule 72 (var)


State 129

   13 arr_cycle: ARRAY L_BRACK NUM R_BRACK L_BRACK NUM R_BRACK . OF

    OF  shift, and go to state 143


State 130

   63 term: IDEN L_PAREN param_cycle R_PAREN .

    $default  reduce using rule 63 (term)


State 131

   70 exp_cycle: exp_cycle COMMA . exp

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    exp        go to state 144
    mult_exp   go to state 60
    term       go to state 61
    term_base  go to state 62
    var        go to state 63


State 132

   26 else_cycle: ELSE . stmt_cycle

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    DO        shift, and go to state 28
    FOR       shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDEN      shift, and go to state 34

    stmt_cycle      go to state 145
    stmt            go to state 36
    assign_cycle    go to state 37
    if_cycle        go to state 38
    while_cycle     go to state 39
    do_cycle        go to state 40
    for_cycle       go to state 41
    read_cycle      go to state 42
    write_cycle     go to state 43
    continue_cycle  go to state 44
    return_cycle    go to state 45
    var             go to state 46


State 133

   24 if_cycle: IF bool_exp THEN stmt_cycle else_cycle . ENDIF

    ENDIF  shift, and go to state 146


State 134

   54 mult_cycle: ADD mult_exp mult_cycle .

    $default  reduce using rule 54 (mult_cycle)


State 135

   55 mult_cycle: SUB mult_exp mult_cycle .

    $default  reduce using rule 55 (mult_cycle)


State 136

   58 term_cycle: MULT term term_cycle .

    $default  reduce using rule 58 (term_cycle)


State 137

   59 term_cycle: DIV term term_cycle .

    $default  reduce using rule 59 (term_cycle)


State 138

   60 term_cycle: MOD term term_cycle .

    $default  reduce using rule 60 (term_cycle)


State 139

   27 while_cycle: WHILE bool_exp BEGINLOOP stmt_cycle ENDLOOP .

    $default  reduce using rule 27 (while_cycle)


State 140

   28 do_cycle: DO BEGINLOOP stmt_cycle ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    bool_exp      go to state 147
    rel_and_exp   go to state 56
    rel_exp       go to state 57
    rel_exp_base  go to state 58
    exp           go to state 59
    mult_exp      go to state 60
    term          go to state 61
    term_base     go to state 62
    var           go to state 63


State 141

   29 for_cycle: FOR var ASSIGN NUM SEMICOLON . bool_exp SEMICOLON var ASSIGN exp BEGINLOOP stmt_cycle ENDLOOP

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    bool_exp      go to state 148
    rel_and_exp   go to state 56
    rel_exp       go to state 57
    rel_exp_base  go to state 58
    exp           go to state 59
    mult_exp      go to state 60
    term          go to state 61
    term_base     go to state 62
    var           go to state 63


State 142

   73 var: IDEN L_BRACK exp R_BRACK L_BRACK . exp R_BRACK

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    exp        go to state 149
    mult_exp   go to state 60
    term       go to state 61
    term_base  go to state 62
    var        go to state 63


State 143

   13 arr_cycle: ARRAY L_BRACK NUM R_BRACK L_BRACK NUM R_BRACK OF .

    $default  reduce using rule 13 (arr_cycle)


State 144

   70 exp_cycle: exp_cycle COMMA exp .

    $default  reduce using rule 70 (exp_cycle)


State 145

   10 stmt_cycle: stmt_cycle . stmt SEMICOLON
   26 else_cycle: ELSE stmt_cycle .

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    DO        shift, and go to state 28
    FOR       shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDEN      shift, and go to state 34

    $default  reduce using rule 26 (else_cycle)

    stmt            go to state 74
    assign_cycle    go to state 37
    if_cycle        go to state 38
    while_cycle     go to state 39
    do_cycle        go to state 40
    for_cycle       go to state 41
    read_cycle      go to state 42
    write_cycle     go to state 43
    continue_cycle  go to state 44
    return_cycle    go to state 45
    var             go to state 46


State 146

   24 if_cycle: IF bool_exp THEN stmt_cycle else_cycle ENDIF .

    $default  reduce using rule 24 (if_cycle)


State 147

   28 do_cycle: DO BEGINLOOP stmt_cycle ENDLOOP WHILE bool_exp .
   37 bool_exp: bool_exp . OR rel_and_exp

    OR  shift, and go to state 85

    $default  reduce using rule 28 (do_cycle)


State 148

   29 for_cycle: FOR var ASSIGN NUM SEMICOLON bool_exp . SEMICOLON var ASSIGN exp BEGINLOOP stmt_cycle ENDLOOP
   37 bool_exp: bool_exp . OR rel_and_exp

    OR         shift, and go to state 85
    SEMICOLON  shift, and go to state 150


State 149

   73 var: IDEN L_BRACK exp R_BRACK L_BRACK exp . R_BRACK

    R_BRACK  shift, and go to state 151


State 150

   29 for_cycle: FOR var ASSIGN NUM SEMICOLON bool_exp SEMICOLON . var ASSIGN exp BEGINLOOP stmt_cycle ENDLOOP

    IDEN  shift, and go to state 34

    var  go to state 152


State 151

   73 var: IDEN L_BRACK exp R_BRACK L_BRACK exp R_BRACK .

    $default  reduce using rule 73 (var)


State 152

   29 for_cycle: FOR var ASSIGN NUM SEMICOLON bool_exp SEMICOLON var . ASSIGN exp BEGINLOOP stmt_cycle ENDLOOP

    ASSIGN  shift, and go to state 153


State 153

   29 for_cycle: FOR var ASSIGN NUM SEMICOLON bool_exp SEMICOLON var ASSIGN . exp BEGINLOOP stmt_cycle ENDLOOP

    L_PAREN  shift, and go to state 70
    NUM      shift, and go to state 52
    IDEN     shift, and go to state 53
    SUB      shift, and go to state 54

    exp        go to state 154
    mult_exp   go to state 60
    term       go to state 61
    term_base  go to state 62
    var        go to state 63


State 154

   29 for_cycle: FOR var ASSIGN NUM SEMICOLON bool_exp SEMICOLON var ASSIGN exp . BEGINLOOP stmt_cycle ENDLOOP

    BEGINLOOP  shift, and go to state 155


State 155

   29 for_cycle: FOR var ASSIGN NUM SEMICOLON bool_exp SEMICOLON var ASSIGN exp BEGINLOOP . stmt_cycle ENDLOOP

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    DO        shift, and go to state 28
    FOR       shift, and go to state 29
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDEN      shift, and go to state 34

    stmt_cycle      go to state 156
    stmt            go to state 36
    assign_cycle    go to state 37
    if_cycle        go to state 38
    while_cycle     go to state 39
    do_cycle        go to state 40
    for_cycle       go to state 41
    read_cycle      go to state 42
    write_cycle     go to state 43
    continue_cycle  go to state 44
    return_cycle    go to state 45
    var             go to state 46


State 156

   10 stmt_cycle: stmt_cycle . stmt SEMICOLON
   29 for_cycle: FOR var ASSIGN NUM SEMICOLON bool_exp SEMICOLON var ASSIGN exp BEGINLOOP stmt_cycle . ENDLOOP

    IF        shift, and go to state 26
    WHILE     shift, and go to state 27
    DO        shift, and go to state 28
    FOR       shift, and go to state 29
    ENDLOOP   shift, and go to state 157
    CONTINUE  shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    RETURN    shift, and go to state 33
    IDEN      shift, and go to state 34

    stmt            go to state 74
    assign_cycle    go to state 37
    if_cycle        go to state 38
    while_cycle     go to state 39
    do_cycle        go to state 40
    for_cycle       go to state 41
    read_cycle      go to state 42
    write_cycle     go to state 43
    continue_cycle  go to state 44
    return_cycle    go to state 45
    var             go to state 46


State 157

   29 for_cycle: FOR var ASSIGN NUM SEMICOLON bool_exp SEMICOLON var ASSIGN exp BEGINLOOP stmt_cycle ENDLOOP .

    $default  reduce using rule 29 (for_cycle)
